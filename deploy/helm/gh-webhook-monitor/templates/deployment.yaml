apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.name }}"
  labels:
    {{- toYaml .Values.labels | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- toYaml .Values.labels | nindent 6 }}
  template:
    metadata:
      labels:
        {{- toYaml .Values.labels | nindent 8 }}
    spec:
      containers:
        - name: "{{ .Values.name }}"
          image: "{{ .Values.image }}"
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: prometheus
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: prometheus
          readinessProbe:
            httpGet:
              path: /metrics
              port: prometheus
          volumeMounts:
            - mountPath: /gh/app.pem
              name: gh-app-pem
              subPath: app.pem
          envFrom:
            - secretRef:
                name: {{ .Values.envFromSecret }}
          env:
            - name: GWM_GH_APP_PEM
              value: /gh/app.pem
            {{- if .Values.webhookFilters.targetURLRegexp }}
            - name: GWM_WEBHOOK_FILTERS_TARGET_REGEXP
              value: {{ .Values.webhookFilters.targetURLRegexp }}
            {{- end }}
            {{- if .Values.repoFilters.include }}
            - name: GWM_REPOS_INCLUDE
              value: "{{- range $_, $repo := .Values.repoFilters.include -}}{{$repo}},{{- end -}}"
            {{- end }}
            {{- if .Values.repoFilters.exclude }}
            - name: GWM_REPOS_EXCLUDE
              value: "{{- range $_, $repo := .Values.repoFilters.exclude -}}{{$repo}},{{- end -}}"
            {{- end }}
            {{- if .Values.repoFilters.teams }}
            - name: GWM_REPOS_FILTER_TEAM_SLUGS
              value: "{{- range $_, $repo := .Values.repoFilters.teams -}}{{$repo}},{{- end -}}"
            {{- end }}
      volumes:
        - name: gh-app-pem
          secret:
            secretName: {{ .Values.pemSecret }}